#!/bin/bash

set -ux

# Allow VCAP_REPO to be overriden for testing
VCAP_REPO=${VCAP_REPO:-https://github.com/cloudfoundry/vcap.git}
PLATFORM='Linux'
INSTALL_DIR='/opt/cloudfoundry-server'

export rvm_trust_rvmrcs_flag=1 # Trust all rmvrcs we find

echo ""
echo '-----------------------------------------------------------'
echo "($PLATFORM) One Click Installer for VMware's Cloud Application Platform!"
echo '-----------------------------------------------------------'
echo ""

add-apt-repository "deb http://ppa.launchpad.net/cloudfoundry/ppa/ubuntu oneiric main"
apt-get -y update
apt-get -y install git-core ruby ruby-rvm libsqlite3-dev ruby-full rake rubygems nginx lsof psmisc redis-server ruby1.9.1-full libmysqlclient-dev rubygems1.9.1 nodejs erlang libxslt1-dev libssl-dev mongodb libpq-dev

#Mount EBS volume containing required gemsets and rubies
#This should be removed for production and ALL other commented
#lines of code below uncommented
export EC2_SECRET_KEY=eict9FS4+DOQVfjBrlb4rhPTUNB1x4WWlpgx50gT
export EC2_URL=https://ec2.amazonaws.com
export EC2_ACCESS_KEY=AKIAJHAEHXEVAF2UTSKA

HOSTNAME=`hostname` euca-attach-volume -i `euca-describe-instances |grep $HOSTNAME |awk -F" " '{print $2}'` -d /dev/sdf vol-03032568
sleep 10
mkdir -p /mnt/gems && mount -t ext3 /dev/xvdf1 /mnt/gems
mkdir -p /var/lib/gems && mount --bind /mnt/gems/gems/ /var/lib/gems
mount --bind /mnt/gems/ruby-rvm/gems /usr/share/ruby-rvm/gems
mount --bind /mnt/gems/ruby-rvm/rubies /usr/share/ruby-rvm/rubies

#echo "Activate rvm"
#HOME="/root"
#source /etc/rvmrc
#source /etc/profile

#This should be done in production, but to save time, we mount a pre-existing copy from an EBS volume
#echo "Installing various rubies"
#rvm install 1.9.2-p180
#rvm --default 1.9.2-p180
#rvm install 1.8.7
#
## install only rake 0.8.7
#rvm use 1.8.7
#gem install rake --version '0.8.7' --no-rdoc --no-ri
#
#rvm use 1.9.2
#gem install rake --version '0.8.7' --no-rdoc --no-ri

echo "Getting vcap"
[ -d $INSTALL_DIR ] || mkdir -p $INSTALL_DIR
cd $INSTALL_DIR

[ -d vcap ] || git clone $VCAP_REPO
cd vcap
git submodule update --init
#gem install vmc --no-rdoc --no-ri

echo "Setting up vcap."
cd $INSTALL_DIR/vcap

##RUN VCAP SETUP##
#######################################################################

echo ""
echo '-----------------------------------------------------------'
echo "($PLATFORM) Setup for VMware's Cloud Application Platform!"
echo '-----------------------------------------------------------'
echo ""

add-apt-repository "deb http://archive.canonical.com/ lucid partner"
apt-get -y update
echo sun-java6-jdk shared/accepted-sun-dlj-v1-1 boolean true | sudo /usr/bin/debconf-set-selections
echo sun-java6-jre shared/accepted-sun-dlj-v1-1 boolean true | sudo /usr/bin/debconf-set-selections
apt-get install -y curl sun-java6-bin sun-java6-jre sun-java6-jdk

echo "Creating default directories at /var/vcap"

if [ ! -d '/var/vcap' ]; then
    mkdir /var/vcap
    mkdir /var/vcap/sys
    mkdir /var/vcap/sys/log
    mkdir /var/vcap/shared
    mkdir /var/vcap/services
    chmod -R 777 /var/vcap
fi

#######################################################################

MYSQL_PASS="$(cat /dev/urandom | tr -dc _A-Z-a-z-0-9 | head -c10)"
#POSTGRESQL_PASS="$(cat /dev/urandom | tr -dc _A-Z-a-z-0-9 | head -c10)"

#echo "Installing PostgreSQL server and support"
#apt-get install -y postgresql libpq-dev
#su - postgres -c "/usr/bin/psql -c \"alter role postgres password '$POSTGRESQL_PASS'\""
#echo "Installing pg gems"
#gem install pg --no-rdoc --no-ri
#echo ""
echo "Installing MySQL server and support"
echo mysql-server-5.1 mysql-server/root_password select $MYSQL_PASS | sudo debconf-set-selections
echo mysql-server-5.1 mysql-server/root_password_again select $MYSQL_PASS | sudo debconf-set-selections
apt-get install -y mysql-server

if [ ! -d '/var/vcap.local' ]; then
    echo "Creating directory /var/vcap.local"
    mkdir "/var/vcap.local"
    chmod  777 "/var/vcap.local"
fi

## END VCAP SETUP ##
#######################################################################

cd $INSTALL_DIR/vcap/services/mysql/config
sed -i.bak -e "s/pass: root/pass: $MYSQL_PASS/" mysql_node.yml
#if [ -d $INSTALL_DIR/vcap/services/postgresql ]; then
#    cd $INSTALL_DIR/vcap/services/postgresql/config
#    sed -i.bkup -e "s/9.0/8.4/g" postgresql_gateway.yml
#    sed -i.bkup -e "s/user: vcap/user: postgres/" -e "s/pass: vcap/pass: $POSTGRESQL_PASS/" postgresql_node.yml
#fi

echo "Restarting nginx"
cd $INSTALL_DIR/vcap
cp setup/simple.nginx.conf /etc/nginx/nginx.conf
/etc/init.d/nginx restart

echo "Installing bundler"
gem install bundler --no-rdoc --no-ri
rake bundler:install

#Install all bundled gems
#TEMPDIR=`mktemp -d`
#cd $INSTALL_DIR/vcap
#for GEM in `find ./ -name *.gem |sed -e '/^\.\/tests/d' -e '/rabbit/d'`; do cp $GEM $TEMPDIR; done
##remove any versions of rake that may break the db setup
#rm -f $TEMPDIR/rake-*.gem
#cd $TEMPDIR
##install all gems for RVM installed ruby 1.9.2
#for GEM in `ls -1`; do
#    gem install $GEM --no-rdoc --no-ri;
#done
##Unload rvm, but create cloud_controller db structure first
#rvm reset
##install all gems for sytem rubies as they will be used by the DEAs
#for GEM in `ls -1`; do
#    /usr/bin/gem1.8 install $GEM --no-rdoc --no-ri;
#    /usr/bin/gem1.9.1 install $GEM --no-rdoc --no-ri;
#done
##cleanup gem cache
#cd && rm -rf $TEMPDIR

#Remove any version of rake >= 0.9 as it causes issues with cc/hm
#for RUBY in ruby-1.8.7-p334 ruby-1.8.7-p334@global ruby-1.9.2-p180 ruby-1.9.2-p180@global; do
#    rvm use $RUBY
#    gem uninstall rake -x --version=0.9.1 || true
#    gem uninstall rake -x --version=0.9.2 || true
#done

#/usr/bin/gem1.8 uninstall rake -x --version=0.9.1 || true
#/usr/bin/gem1.8 uninstall rake -x --version=0.9.2 || true
#/usr/bin/gem1.9.1 uninstall rake -x --version=0.9.1 || true
#/usr/bin/gem1.9.1 uninstall rake -x --version=0.9.2 || true

#Modify DEA config to set proper paths for executables
cd $INSTALL_DIR/vcap/dea/config
sed -i.bak -e 's#executable:\ /usr/bin/ruby#executable:\ /usr/bin/ruby1\.8#g'\
           -e 's#executable:\ ruby#executable:\ /usr/bin/ruby1\.9#g'\
           -e 's#executable:\ /var/vcap/runtimes/erlang-R14B02/bin/erl#executable:\ erlang#g'\
           dea.yml
sed -i.bak -e 's#executable:\ /usr/bin/ruby#executable:\ /usr/bin/ruby1\.8#g'\
           -e 's#executable:\ ruby#executable:\ /usr/bin/ruby1\.9#g'\
           dea2.yml

echo 'Success!'

exit 0;
